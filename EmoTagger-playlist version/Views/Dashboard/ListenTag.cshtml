@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="~/css/listentag.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>emeTagger - Listen & Tag</title>
    <style>
        :root {
            --bg-color: #ffffff;
            --text-color: #333333;
            --primary-color: #ff4d4d;
            --secondary-color: #f8f8f8;
            --border-color: #e0e0e0;
            --card-bg: #ffffff;
            --shadow-color: rgba(0, 0, 0, 0.1);
            --item-bg: #ffffff;
        }

        [data-theme="dark"] {
            --bg-color: #121212;
            --text-color: #e0e0e0;
            --primary-color: #ff4d4d;
            --secondary-color: #1e1e1e;
            --border-color: #333333;
            --card-bg: #1e1e1e;
            --shadow-color: rgba(0, 0, 0, 0.3);
            --item-bg: #1e1e1e;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .tagged-counter {
            position: absolute;
            top: 20px;
            right: 20px;
            background-color: var(--primary-color);
            color: white;
            padding: 10px 15px;
            border-radius: 20px;
            font-weight: bold;
            font-size: 16px;
            box-shadow: 0 4px 10px rgba(255, 77, 77, 0.3);
            animation: pulse 2s infinite;
        }

     

        .player-container {
            background: linear-gradient(to bottom, rgba(255, 77, 77, 0.1), transparent);
            border-radius: 20px;
            padding: 30px;
            margin: 30px 0;
            box-shadow: 0 10px 30px var(--shadow-color);
            position: relative;
            overflow: hidden;
        }

            .player-container::before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 3px;
                background: linear-gradient(to right, #ff4d4d, #ff8a8a);
            }

        .now-playing-3d {
            perspective: 1000px;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            height: 300px;
            margin-bottom: 30px;
        }

        .album-cover {
            width: 220px;
            height: 220px;
            transform-style: preserve-3d;
            transition: all 0.5s ease;
            box-shadow: 0 15px 30px var(--shadow-color);
            border-radius: 10px;
            overflow: hidden;
            position: absolute;
        }

            .album-cover img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .album-titles {
            display: flex;
            justify-content: space-between;
            width: 100%;
            margin-bottom: 20px;
            text-align: center;
        }

        .album-title {
            font-size: 16px;
            font-weight: bold;
            color: var(--text-color);
            opacity: 0.7;
            padding: 0 20px;
        }

            .album-title.current {
                color: var(--primary-color);
                opacity: 1;
                transform: scale(1.1);
            }

        .previous-album {
            transform: translateX(-240px) translateZ(-100px) rotateY(20deg);
            filter: brightness(0.7);
            z-index: 1;
        }

        .current-album {
            transform: translateZ(0) rotateY(0);
            z-index: 3;
            box-shadow: 0 20px 40px rgba(255, 77, 77, 0.3);
        }

        .next-album {
            transform: translateX(240px) translateZ(-100px) rotateY(-20deg);
            filter: brightness(0.7);
            z-index: 2;
        }

        .music-info {
            text-align: center;
            margin: 20px 0 30px;
            position: relative;
        }

            .music-info::after {
                content: "";
                position: absolute;
                bottom: -15px;
                left: 50%;
                transform: translateX(-50%);
                width: 100px;
                height: 3px;
                background: linear-gradient(to right, #ff4d4d, #ff8a8a);
                border-radius: 3px;
            }

            .music-info h2 {
                font-size: 32px;
                margin-bottom: 10px;
                background: linear-gradient(to right, #ff4d4d, #ff8a8a);
                -webkit-background-clip: text;
                background-clip: text;
                color: transparent;
                display: inline-block;
            }

            .music-info p {
                font-size: 18px;
                color: var(--text-color);
                opacity: 0.8;
            }

        .controls {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
            margin: 20px 0;
        }

        .top-controls {
            margin-bottom: 30px;
        }

        .control-btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: all 0.2s ease;
            box-shadow: 0 5px 15px rgba(255, 77, 77, 0.3);
        }

            .control-btn:hover {
                transform: translateY(-3px) scale(1.1);
                box-shadow: 0 8px 20px rgba(255, 77, 77, 0.4);
            }

        .play-btn {
            width: 60px;
            height: 60px;
            background: linear-gradient(to bottom right, #ff4d4d, #ff8a8a);
        }

        .progress-container {
            width: 100%;
            max-width: 800px;
            margin: 30px auto 10px;
            background-color: var(--secondary-color);
            border-radius: 10px;
            height: 8px;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .progress-bar {
            background: linear-gradient(to right, #ff4d4d, #ff8a8a);
            height: 100%;
            border-radius: 10px;
            width: 30%;
            position: relative;
        }

            .progress-bar::after {
                content: "";
                position: absolute;
                right: 0;
                top: 50%;
                transform: translateY(-50%);
                width: 12px;
                height: 12px;
                background-color: white;
                border-radius: 50%;
                box-shadow: 0 0 10px rgba(255, 77, 77, 0.5);
            }

        .time-display {
            display: flex;
            justify-content: space-between;
            width: 100%;
            max-width: 800px;
            margin: 5px auto 20px;
            font-size: 14px;
            font-weight: bold;
        }

        .tag-section {
            margin: 50px 0;
            text-align: center;
            background: linear-gradient(to bottom, rgba(255, 77, 77, 0.05), transparent);
            padding: 30px;
            border-radius: 20px;
        }

            .tag-section h3 {
                font-size: 28px;
                margin-bottom: 30px;
                position: relative;
                display: inline-block;
            }

                .tag-section h3::after {
                    content: "";
                    position: absolute;
                    bottom: -10px;
                    left: 0;
                    width: 100%;
                    height: 3px;
                    background: linear-gradient(to right, #ff4d4d, #ff8a8a);
                    border-radius: 3px;
                }

        .emotion-tags {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 15px;
            margin: 0 auto;
            max-width: 900px;
        }

        .emotion-tag {
            background-color: var(--item-bg);
            border: 2px solid transparent;
            border-radius: 30px;
            padding: 12px 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 18px;
            font-weight: bold;
            box-shadow: 0 5px 15px var(--shadow-color);
        }

            .emotion-tag:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 20px var(--shadow-color);
            }

            .emotion-tag span {
                font-size: 24px;
            }

            .emotion-tag.selected {
                border-color: var(--primary-color);
                background: linear-gradient(to bottom right, rgba(255, 77, 77, 0.1), rgba(255, 77, 77, 0.2));
                color: var(--primary-color);
                box-shadow: 0 5px 20px rgba(255, 77, 77, 0.3);
            }

        .recently-tagged {
            margin: 50px 0;
        }

            .recently-tagged h3 {
                font-size: 28px;
                margin-bottom: 30px;
                position: relative;
                display: inline-block;
            }

                .recently-tagged h3::after {
                    content: "";
                    position: absolute;
                    bottom: -10px;
                    left: 0;
                    width: 100%;
                    height: 3px;
                    background: linear-gradient(to right, #ff4d4d, #ff8a8a);
                    border-radius: 3px;
                }

        .tagged-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 25px;
        }

        .tagged-item {
            background-color: var(--item-bg);
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 20px var(--shadow-color);
            transition: all 0.3s ease;
            border: 1px solid var(--border-color);
        }

            .tagged-item:hover {
                transform: translateY(-8px);
                box-shadow: 0 15px 30px var(--shadow-color);
            }

        .tagged-item-content {
            padding: 20px;
            display: flex;
            gap: 15px;
        }

        .tagged-item-img {
            width: 70px;
            height: 70px;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px var(--shadow-color);
        }

            .tagged-item-img img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .tagged-item-info {
            flex: 1;
        }

            .tagged-item-info h4 {
                margin-bottom: 8px;
                font-size: 16px;
            }

            .tagged-item-info p {
                font-size: 14px;
                opacity: 0.8;
                margin-bottom: 10px;
            }

        .tagged-emotions {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }

        .tagged-emotion {
            background-color: var(--secondary-color);
            border-radius: 15px;
            padding: 5px 10px;
            font-size: 12px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .tagged-check {
            color: var(--primary-color);
            margin-left: auto;
            display: flex;
            align-items: center;
            font-size: 20px;
        }

     

        .album-cover, .music-info, .controls, .emotion-tag, .tagged-item {
            animation: fadeIn 0.8s ease-out forwards;
        }

        /* Animation delays for a staggered effect */
        .album-cover {
            animation-delay: 0.1s;
        }

        .music-info {
            animation-delay: 0.3s;
        }

        .controls {
            animation-delay: 0.5s;
        }

        .emotion-tag:nth-child(1) {
            animation-delay: 0.6s;
        }

        .emotion-tag:nth-child(2) {
            animation-delay: 0.7s;
        }

        .emotion-tag:nth-child(3) {
            animation-delay: 0.8s;
        }

        .emotion-tag:nth-child(4) {
            animation-delay: 0.9s;
        }

        .emotion-tag:nth-child(5) {
            animation-delay: 1s;
        }

        .emotion-tag:nth-child(6) {
            animation-delay: 1.1s;
        }

        .tagged-item:nth-child(1) {
            animation-delay: 1.2s;
        }

        .tagged-item:nth-child(2) {
            animation-delay: 1.3s;
        }

        .tagged-item:nth-child(3) {
            animation-delay: 1.4s;
        }

        .tagged-item:nth-child(4) {
            animation-delay: 1.5s;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="tagged-counter">
            Tagged Music: <span id="tagged-count">42</span>
        </div>

        <div class="player-container">
            <div class="album-titles">
                <div class="album-title">Previous Song</div>
                <div class="album-title current">Current Song</div>
                <div class="album-title">Next Song</div>
            </div>

            <div class="now-playing-3d">
                <div class="album-cover previous-album">
                    <img src="/api/placeholder/220/220" alt="Previous Song">
                </div>
                <div class="album-cover current-album">
                    <img src="/api/placeholder/220/220" alt="Current Song">
                </div>
                <div class="album-cover next-album">
                    <img src="/api/placeholder/220/220" alt="Next Song">
                </div>
            </div>

            <div class="music-info">
                <h2>Pop Smoke - Cascada</h2>
                <p>Faith (2021)</p>
            </div>

            <div class="controls top-controls">
                <button class="control-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.669 11.538a.498.498 0 0 1-.686.165c-1.879-1.147-4.243-1.407-7.028-.77a.499.499 0 0 1-.222-.973c3.048-.696 5.662-.397 7.77.892a.5.5 0 0 1 .166.686z" />
                        <path d="M10.833 8.234a.625.625 0 0 1-.858.205c-2.15-1.321-5.428-1.704-7.972-.932a.625.625 0 0 1-.362-1.194c2.905-.881 6.517-.454 8.986 1.063a.624.624 0 0 1 .206.858z" />
                        <path d="M11.732 6.364C9.162 4.798 5.331 4.702 3.117 5.368a.75.75 0 0 1-.459-1.423c2.826-.906 7.131-.737 10.067 1.324a.75.75 0 0 1-.993 1.095z" />
                    </svg>
                </button>
                <button class="control-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 4a4 4 0 1 1-8 0 4 4 0 0 1 8 0zM8 0a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V5a.5.5 0 0 1-1 0V3H6a.5.5 0 0 1 0-1h1.5V.5A.5.5 0 0 1 8 0z" />
                    </svg>
                </button>
                <button class="control-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.05 11.037C8.745 10.264 7.463 10 5.979 10c-1.707 0-3.074.326-3.535.545a.5.5 0 1 1-.316-.95c.538-.256 2.067-.627 3.851-.627 1.657 0 3.124.309 4.447 1.19a.5.5 0 0 1-.576.88zM11.051 9c-1.276-.772-3.033-.925-4.53-.925-1.768 0-3.318.223-4.358.65a.5.5 0 1 1-.31-.95c1.136-.474 2.85-.724 4.668-.724 1.668 0 3.611.188 5.142 1.093a.5.5 0 0 1-.612.856zm-4.81-3.334A.5.5 0 0 1 6.5 5a.5.5 0 0 1-.488.502 1.74 1.74 0 0 0-1.341.512 1.621 1.621 0 0 0-.417 1.13A.5.5 0 0 1 3.5 7.5a.5.5 0 0 1-.513-.486 2.54 2.54 0 0 1 .724-1.918 2.733 2.733 0 0 1 2.1-.967.5.5 0 0 1 .43.536z" />
                    </svg>
                </button>
                <button class="control-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M4 1c2.21 0 4 1.755 4 3.92C8 2.755 9.79 1 12 1s4 1.755 4 3.92c0 3.263-3.234 4.414-7.608 9.608a.513.513 0 0 1-.784 0C3.234 9.334 0 8.183 0 4.92 0 2.755 1.79 1 4 1z" />
                    </svg>
                </button>
                <button class="control-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z" />
                    </svg>
                </button>
            </div>

            <div class="controls">
                <button class="control-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M.5 3.5A.5.5 0 0 1 1 4v3.248l6.267-3.636c.52-.302 1.233.043 1.233.696v2.94l6.267-3.636c.52-.302 1.233.043 1.233.696v7.384c0 .653-.713.998-1.233.696L8.5 8.752v2.94c0 .653-.713.998-1.233.696L1 8.752V12a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z" />
                    </svg>
                </button>
                <button class="control-btn play-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M11.596 8.697l-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z" />
                    </svg>
                </button>
                <button class="control-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M15.5 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V8.752l-6.267 3.636c-.52.302-1.233-.043-1.233-.696v-2.94l-6.267 3.636C.713 12.69 0 12.345 0 11.692V4.308c0-.653.713-.998 1.233-.696L7.5 7.248v-2.94c0-.653.713-.998 1.233-.696L15 7.248V4a.5.5 0 0 1 .5-.5z" />
                    </svg>
                </button>
            </div>

            <div class="progress-container">
                <div class="progress-bar"></div>
            </div>
            <div class="time-display">
                <span>00:00</span>
                <span>00:27</span>
            </div>
        </div>

        <div class="tag-section">
            <h3>How does this music make you feel?</h3>
            <div class="emotion-tags">
                <div class="emotion-tag">
                    <span>😊</span> Joyful
                </div>
                <div class="emotion-tag selected">
                    <span>⚡</span> Energetic
                </div>
                <div class="emotion-tag">
                    <span>😌</span> Calm
                </div>
                <div class="emotion-tag selected">
                    <span>🕰️</span> Nostalgic
                </div>
                <div class="emotion-tag">
                    <span>😢</span> Melancholic
                </div>
                <div class="emotion-tag selected">
                    <span>😡</span> Angry
                </div>
            </div>
        </div>

        <div class="recently-tagged">
            <h3>Recently Tagged Music</h3>
            <div class="tagged-list">
                <div class="tagged-item">
                    <div class="tagged-item-content">
                        <div class="tagged-item-img">
                            <img src="/api/placeholder/70/70" alt="Album Cover">
                        </div>
                        <div class="tagged-item-info">
                            <h4>The Weeknd - Blinding Lights</h4>
                            <p>After Hours</p>
                            <div class="tagged-emotions">
                                <span class="tagged-emotion"><span>⚡</span> Energetic</span>
                                <span class="tagged-emotion"><span>🕰️</span> Nostalgic</span>
                            </div>
                        </div>
                        <div class="tagged-check">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
                            </svg>
                        </div>
                    </div>
                </div>
                <div class="tagged-item">
                    <div class="tagged-item-content">
                        <div class="tagged-item-img">
                            <img src="/api/placeholder/70/70" alt="Album Cover">
                        </div>
                        <div class="tagged-item-info">
                            <h4>Lana Del Rey - Summertime Sadness</h4>
                            <p>Born To Die</p>
                            <div class="tagged-emotions">
                                <span class="tagged-emotion"><span>😢</span> Melancholic</span>
                                <span class="tagged-emotion"><span>🕰️</span> Nostalgic</span>
                            </div>
                        </div>
                        <div class="tagged-check">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
                            </svg>
                        </div>
                    </div>
                </div>
                <div class="tagged-item">
                    <div class="tagged-item-content">
                        <div class="tagged-item-img">
                            <img src="/api/placeholder/70/70" alt="Album Cover">
                        </div>
                        <div class="tagged-item-info">
                            <h4>Kendrick Lamar - HUMBLE.</h4>
                            <p>DAMN.</p>
                            <div class="tagged-emotions">
                                <span class="tagged-emotion"><span>⚡</span> Energetic</span>
                                <span class="tagged-emotion"><span>😡</span> Angry</span>
                            </div>
                        </div>
                        <div class="tagged-check">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
                            </svg>
                        </div>
                    </div>
                </div>
                <div class="tagged-item">
                    <div class="tagged-item-content">
                        <div class="tagged-item-img">
                            <img src="/api/placeholder/70/70" alt="Album Cover">
                        </div>
                        <div class="tagged-item-info">
                            <h4>Billie Eilish - everything i wanted</h4>
                            <p>Single</p>
                            <div class="tagged-emotions">
                                <span class="tagged-emotion"><span>😌</span> Calm</span>
                                <span class="tagged-emotion"><span>😢</span> Melancholic</span>
                            </div>
                        </div>
                        <div class="tagged-check">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Simulate dark mode toggle for demonstration
        document.addEventListener('DOMContentLoaded', function() {
            // Check if system prefers dark mode
            const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;

            if (prefersDarkMode) {
                document.documentElement.setAttribute('data-theme', 'dark');
            }

            // For demonstration purposes - normally this would be linked to your site's dark mode toggle
            // Uncomment to test dark mode
            // document.documentElement.setAttribute('data-theme', 'dark');

            // Handle emotion tag selection
            const emotionTags = document.querySelectorAll('.emotion-tag');

            // Allow selecting/deselecting emotion tags
            emotionTags.forEach(tag => {
                tag.addEventListener('click', () => {
                    // Limit to max 3 selections
                    const selectedCount = document.querySelectorAll('.emotion-tag.selected').length;

                    if (tag.classList.contains('selected')) {
                        tag.classList.remove('selected');
                    } else if (selectedCount < 3) {
                        tag.classList.add('selected');
                    }
                });
            });

            // Play/Pause toggle
            const playBtn = document.querySelector('.play-btn');
            playBtn.addEventListener('click', function() {
                const svg = this.querySelector('svg');
                if (svg.innerHTML.includes('path d="M11.596 8.697l-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"')) {
                    // Change to pause icon
                    svg.innerHTML = '<path d="M5.5 3.5A1.5 1.5 0 0 1 7 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5zm5 0A1.5 1.5 0 0 1 12 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5z"/>';
                } else {
                    // Change to play icon
                    svg.innerHTML = '<path d="M11.596 8.697l-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"/>';
                }
            });

            // Update progress bar as the song plays (demo only)
            let progressWidth = 30;
            const progressBar = document.querySelector('.progress-bar');
            const interval = setInterval(() => {
                progressWidth = (progressWidth + 1) % 100;
                progressBar.style.width = progressWidth + '%';
            }, 1000);

            // Simulate album cycling with arrow keys
            document.addEventListener('keydown', function(e) {
                if (e.key === 'ArrowRight') {
                    cycleAlbums('next');
                } else if (e.key === 'ArrowLeft') {
                    cycleAlbums('prev');
                }
            });

            function cycleAlbums(direction) {
                const albums = document.querySelectorAll('.album-cover');
                if (direction === 'next') {
                    albums[0].classList.remove('previous-album');
                    albums[0].classList.add('next-album');

                    albums[1].classList.remove('current-album');
                    albums[1].classList.add('previous-album');

                    albums[2].classList.remove('next-album');
                    albums[2].classList.add('current-album');
                } else {
                    albums[0].classList.remove('previous-album');
                    albums[0].classList.add('current-album');

                    albums[1].classList.remove('current-album');
                    albums[1].classList.add('next-album');

                    albums[2].classList.remove('next-album');
                    albums[2].classList.add('previous-album');
                }
            }
        });
    </script>
</body>
</html>